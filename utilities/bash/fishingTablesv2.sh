#!/bin/bash

TABLES=$(bq ls --max_results 10000 pipeline_classify_logistic_661b  | grep TABLE | pyin 'line.strip().split()[0]')

for T in ${TABLES}; do       
   echo  bq query --replace=TRUE --destination_table=pipeline_classify_logistic_661b_fishing.${T} --allow_large_results '"SELECT IF(prev_lat IS NULL and prev_lon IS NULL, ((timestamp - TIMESTAMP(DATE(timestamp)))/3600000000)*speed*1852, (ACOS(COS(RADIANS(90-lat)) *COS(RADIANS(90-prev_lat)) +SIN(RADIANS(90-lat)) *SIN(RADIANS(90-prev_lat)) * COS(RADIANS(lon-prev_lon)))*6371000)) prev_gapmeters, IF(next_lat IS NULL and next_lon IS NULL, (( TIMESTAMP(DATE(timestamp))- timestamp)/3600000000 +24)*speed*1852, (ACOS(COS(RADIANS(90-lat)) *COS(RADIANS(90-next_lat)) +SIN(RADIANS(90-lat)) *SIN(RADIANS(90-next_lat)) * COS(RADIANS(lon-next_lon)))*6371000)) next_gapmeters, IF(last_timestamp IS NOT NULL, ((timestamp-last_timestamp)/2)/3600000000, (timestamp - TIMESTAMP(DATE(timestamp)))/3600000000) + IF(next_timestamp IS NOT NULL, ((next_timestamp - timestamp)/2)/3600000000, ( TIMESTAMP(DATE(timestamp))- timestamp)/3600000000 + 24 ) hours, * FROM ( SELECT LAG(timestamp, 1) OVER (PARTITION BY seg_id ORDER BY timestamp) last_timestamp, LEAD(timestamp,1) OVER (PARTITION BY seg_id ORDER BY timestamp) next_timestamp, LAG(lat, 1) OVER (PARTITION BY seg_id ORDER BY timestamp) prev_lat, LEAD(lat,1) OVER (PARTITION BY seg_id ORDER BY timestamp) next_lat, LAG(lon, 1) OVER (PARTITION BY seg_id ORDER BY timestamp) prev_lon, LEAD(lon,1) OVER (PARTITION BY seg_id ORDER BY timestamp) next_lon, *, INTEGER(FLOOR(lat/5)*5) lat_bin_five, INTEGER(FLOOR(lon/5)*5) lon_bin_five, (FLOOR(lat*2))/2 lat_bin_half, (FLOOR(lon*2))/2 lon_bin_half, HOUR(timestamp) hour, INTEGER(FLOOR(MINUTE(timestamp)/2)*2) minute_bin FROM [pipeline_classify_logistic_661b.'${T}'] WHERE lat IS NOT NULL AND lon IS NOT NULL AND mmsi IN ( SELECT mmsi FROM [scratch_david_mmsi_lists.known_likely_fishing_mmsis_'${T:0:4}']))"' 
done | parallel -j 16
